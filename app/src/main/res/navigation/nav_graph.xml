<?xml version="1.0" encoding="utf-8"?>
<navigation xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    app:startDestination="@id/magicFragment">

    <!-- Magic Section -->
    <fragment
        android:id="@+id/magicFragment"
        android:name="pol.rubiano.magicapp.features.presentation.ui.MagicFragment"
        android:label="@string/magic_title">

        <action
            android:id="@+id/action_from_magic_to_keywords"
            app:destination="@+id/keywords_fragment" />
        <action
            android:id="@+id/action_from_magic_to_legalities"
            app:destination="@+id/legalities_fragment" />
    </fragment>

    <fragment
        android:id="@+id/keywords_fragment"
        android:name="pol.rubiano.magicapp.features.presentation.ui.magic.KeywordsFragment"
        android:label="@string/keyword_title" />

    <fragment
        android:id="@+id/legalities_fragment"
        android:name="pol.rubiano.magicapp.features.presentation.ui.magic.LegalitiesFragment"
        android:label="@string/legality_title" />

    <!-- Collections List -->
    <fragment
        android:id="@+id/collectionsList"
        android:name="pol.rubiano.magicapp.features.collections.presentation.CollectionsList"
        android:label="@string/collections_list_title">
        <action
            android:id="@+id/action_collectionsList_to_newCollectionForm"
            app:destination="@+id/newCollectionForm" />
    </fragment>

    <fragment
        android:id="@+id/newCollectionForm"
        android:name="pol.rubiano.magicapp.features.collections.presentation.NewCollectionForm"
        android:label="@string/str_new_collection_title">
        <!-- Force destination back to -->
        <action
            android:id="@+id/action_newCollectionForm_to_collectionsList"
            app:destination="@+id/collectionsList" />
    </fragment>

    <!-- DECKS-->
    <fragment
        android:id="@+id/decksFragment"
        android:name="pol.rubiano.magicapp.features.decks.DecksFragment"
        android:label="@string/str_decks">
        <action
            android:id="@+id/act_decks_to_new_deck"
            app:destination="@+id/newDeckFragment" />

        <action
            android:id="@+id/act_decks_to_deck_details"
            app:destination="@+id/deckDetails">
            <argument
                android:name="deck"
                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
                app:nullable="false" />
        </action>
    </fragment>

    <!-- DECK NEW -->
    <fragment
        android:id="@+id/newDeckFragment"
        android:name="pol.rubiano.magicapp.features.decks.newdeck.NewDeckFragment"
        android:label="@string/str_new_deck">
        <!--        <argument-->
        <!--            android:name="deck"-->
        <!--            app:argType="pol.rubiano.magicapp.features.domain.models.Deck"-->
        <!--            app:nullable="false" />-->

        <action
            android:id="@+id/act_new_deck_to_deck_details"
            app:destination="@+id/deckDetails">
            <!--            <argument-->
            <!--                android:name="deck"-->
            <!--                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"-->
            <!--                app:nullable="false" />-->
        </action>
    </fragment>

    <!-- DECK DETAILS -->
    <fragment
        android:id="@+id/deckDetails"
        android:name="pol.rubiano.magicapp.features.decks.deckdetails.DeckDetailsFragment"
        android:label="@string/str_deck_details">
        <argument
            android:name="deck"
            app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
            app:nullable="false" />
        <action
            android:id="@+id/act_details_to_decks"
            app:destination="@+id/decksFragment" />
        <action
            android:id="@+id/act_deck_details_to_search"
            app:destination="@id/searchFragment">
            <argument
                android:name="deck"
                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
                app:nullable="false" />
        </action>

        <action
            android:id="@+id/action_deck_details_to_search"
            app:destination="@+id/searchFragment">
            <argument
                android:name="deck"
                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
                app:nullable="false" />
        </action>

        <!--        <action-->
        <!--            android:id="@+id/action_deckDetailsFragment_to_deckEditFragment"-->
        <!--            app:destination="@+id/editDeckFragment">-->
        <!--            <argument-->
        <!--                android:name="deck"-->
        <!--                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"-->
        <!--                app:nullable="false" />-->
        <!--        </action>-->
    </fragment>

    <!-- RANDOM CARD -->
    <fragment
        android:id="@+id/randomCardFragment"
        android:name="pol.rubiano.magicapp.features.presentation.ui.RandomCardFragment"
        android:label="@string/random_card_title" />

    <!-- SEARCH -->
    <fragment
        android:id="@+id/searchFragment"
        android:name="pol.rubiano.magicapp.features.search.SearchFragment"
        android:label="@string/search_title">
        <argument
            android:name="deck"
            app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
            app:nullable="true" />

        <action
            android:id="@+id/action_search_fragment_to_results_fragment"
            app:destination="@+id/search_results_fragment" />
        <action
            android:id="@+id/act_search_to_deck_details"
            app:destination="@+id/deckDetails">
            <argument
                android:name="deck"
                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
                app:nullable="true" />
        </action>
    </fragment>

    <!-- RESULTS -->
    <fragment
        android:id="@+id/search_results_fragment"
        android:name="pol.rubiano.magicapp.features.search.results.ResultsFragment"
        android:label="@string/search_results_title">
        <argument
            android:name="query"
            app:argType="string" />
        <argument
            android:name="deck"
            app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
            app:nullable="true" />
        <action
            android:id="@+id/action_results_fragment_self"
            app:destination="@+id/search_results_fragment" />
        <action
            android:id="@+id/action_search_results_fragment_to_view_card_fragment"
            app:destination="@+id/view_card_fragment" />
        <action
            android:id="@+id/act_search_results_to_deck_details"
            app:destination="@+id/deckDetails">
            <argument
                android:name="deck"
                app:argType="pol.rubiano.magicapp.features.domain.models.Deck"
                app:nullable="true" />
        </action>

    </fragment>

    <!-- View Card -->
    <fragment
        android:id="@+id/view_card_fragment"
        android:name="pol.rubiano.magicapp.app.presentation.ui.ViewCardFragment"
        android:label="@string/view_card_label">
        <argument
            android:name="cardJson"
            app:argType="string" />
    </fragment>
</navigation>